{"Name":"NLua","Id":441,"Alias":"NLua","Description":"`NLua` is the bind between Lua and .NET. It supports iOS,\nAndroid, Windows Phone 7/8.\n\n## Features\n\n - Easily eval expressions.\n - Call Lua from C#.\n - Call C# from Lua. \n - Use C# Objects, Properties, Methods from any assembly in your scripts.\n\nFor script eval, you can use DoString() or DoFile()\n\n\n```csharp\n\n    using NLua;\n    ...\n\n    [Preserve (AllMembers = true)]\n    public class Scriptable \n    {\n         public Scriptable (string param)\n         { // ... \n         }\n\n         public void DoSomething ()\n         {\n             Console.WriteLine (\"Do Something\");\n         }\n    }\n\n    void ExecuteScript ()\n    {\n        string luaFile = \"script.lua\";\n\n        var lua = new Lua ();\n        double val = (double)lua.DoString (\"return math.sin (10)\") [0];\n        lua.DoFile (luaFile);\n    }\n```\n\n\n```\n\n    -- To create C# object from script, just call ClassName ()\n    local s = Scriptable (\"My String Parameter\")\n\n    -- To call methods use object:Method\n    s:DoSomething ()\n\n    -- To call static methods use ClassName.StaticMethod\n    Scriptable.StaticMethod (\u0027Param\u0027)\n\n```\n\nIf you want to use your class from Lua you need to use [Preserve] to preserve your class, NLua will call the methods using Reflection. [More info](http://docs.xamarin.com/guides/ios/advanced_topics/linker)\n\n\n","Version":"1.3","Summary":"Lua scripting for .NET.","QuickStart":"`NLua` is the bind between Lua and .NET. It supports iOS,\nAndroid and Windows Phone 7/8.\n\n## Features\n\n - Easily eval expressions.\n - Call Lua from C#.\n - Call C# from Lua. \n - Use C# Objects, Properties, Methods from any assembly in your scripts.\n\n## Examples\n\n### Adding a `NLua` to your iOS app:\n\n\n```csharp\n    using NLua;\n    ...\n\n    // Store Lua context \n    Lua context = new Lua ();\n\n    public override void ViewDidLoad ()\n    {\n      base.ViewDidLoad ();  \n      context.LoadCLRPackage (); // Enable call methods using reflection\n\n      ...\n\n    }\n```\n\n### Adding a `NLua` to your Android app:\n\n```csharp\n    using NLua;\n    ...\n\n    Lua context = new Lua ();\n\n    protected override void OnCreate (Bundle bundle)\n    {\n      base.OnCreate (bundle);\n      context.LoadCLRPackage (); // Enable call methods using reflection\n      \n    }\n```\n\n### Evaluating expressions\n\nYou can easily eval any expresion.\n\n```csharp\n\n    double val = (double)context.DoString (\"return math.sin (10)*10 + 7\") [0];\n\n```  \n\n### Calling Static Methods\n\nYou can call any static method using \".\".\n\n```csharp\n\n    public MyClass \n    {\n        public static void Func (int val, string val2)\n        {\n            ...\n        }\n    }\n\n    ...\n\n    context.DoString (\"MyClass.Func(10,\u0027string 3\u0027)\");\n``` \n\n### Send/Retrieve value between Lua/C\\# \n\nYou can set or get values using [] operator.\n\n```csharp\n\n    // Getting global value from Lua\n    context.DoString (\"global_x = 10 + 10 + 2*3\");\n    var x = context [\"global_x\"];\n\n    // Send value to Lua\n    context [\"val_x\"] = 10;\n\n``` \n\n### Calling any method, using BCL from Lua \n\nYou can call any public API from Lua.\nUsing \":\" to instance methods, \".\" to Properties.\n\n```csharp\n    \n    public void MyMethod (int val)\n    {\n        ...\n    }\n\n    public int MyProperty { get; private set; }\n\n\n    // Send this to Lua\n    context [\"instance\"] = this;\n    context.DoString(\"  Console.WriteLine (\u0027Calling CWL from Lua\u0027) \" + \n                     \"  instance:MyMethod (10) \" +      // calling MyMethod from Lua\n                     \"  local p = instance.MyProperty \" // calling MyProperty from Lua\n\n``` \n\nIf you want to use your class from Lua you need to use [Preserve] to preserve your class, NLua will call the methods using Reflection. [More info](http://docs.xamarin.com/guides/ios/advanced_topics/linker)\n\n\n","Hash":"0e49d8dcb6b1e667c1cb46d0ceb2223e","TargetPlatforms":["ios","android","winphone-7.0","winphone-7.1","mobile"],"TrialHash":null}